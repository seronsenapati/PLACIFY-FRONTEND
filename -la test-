[1mdiff --git a/frontend/src/pages/Register.jsx b/frontend/src/pages/Register.jsx[m
[1mindex c59f2b5..8758f0b 100644[m
[1m--- a/frontend/src/pages/Register.jsx[m
[1m+++ b/frontend/src/pages/Register.jsx[m
[36m@@ -7,7 +7,7 @@[m [mconst Register = () => {[m
   const navigate = useNavigate();[m
   const [formData, setFormData] = useState({[m
     name: "",[m
[31m-    username: "", // âœ… added[m
[32m+[m[32m    username: "",[m
     email: "",[m
     password: "",[m
     role: "student",[m
[36m@@ -19,6 +19,17 @@[m [mconst Register = () => {[m
   // Bypass rate limiting for development[m
   const [rateLimited, setRateLimited] = useState(false);[m
   const [retryCountdown, setRetryCountdown] = useState(0);[m
[32m+[m[32m  // Field-specific errors[m
[32m+[m[32m  const [fieldErrors, setFieldErrors] = useState({});[m
[32m+[m[32m  // Password validation states[m
[32m+[m[32m  const [passwordValidation, setPasswordValidation] = useState({[m
[32m+[m[32m    length: false,[m
[32m+[m[32m    hasUpperCase: false,[m
[32m+[m[32m    hasLowerCase: false,[m
[32m+[m[32m    hasNumber: false,[m
[32m+[m[32m    hasSpecialChar: false,[m
[32m+[m[32m  });[m
[32m+[m[32m  const [showPasswordRequirements, setShowPasswordRequirements] = useState(false);[m
 [m
   // Auto-hide messages after 5 seconds[m
   useEffect(() => {[m
[36m@@ -31,20 +42,133 @@[m [mconst Register = () => {[m
     }[m
   }, [errorMsg, successMsg]);[m
 [m
[32m+[m[32m  // Password validation logic[m
[32m+[m[32m  useEffect(() => {[m
[32m+[m[32m    if (formData.password) {[m
[32m+[m[32m      const validation = {[m
[32m+[m[32m        length: formData.password.length >= 8,[m
[32m+[m[32m        hasUpperCase: /[A-Z]/.test(formData.password),[m
[32m+[m[32m        hasLowerCase: /[a-z]/.test(formData.password),[m
[32m+[m[32m        hasNumber: /\d/.test(formData.password),[m
[32m+[m[32m        hasSpecialChar: /[!@#$%^&*()_+\-=\[\]{};':"\\|,.<>\/?]/.test(formData.password),[m
[32m+[m[32m      };[m
[32m+[m[32m      setPasswordValidation(validation);[m
[32m+[m[32m    }[m
[32m+[m[32m  }, [formData.password]);[m
[32m+[m
[32m+[m[32m  const validateField = (name, value) => {[m
[32m+[m[32m    let error = "";[m
[32m+[m[41m    [m
[32m+[m[32m    switch (name) {[m
[32m+[m[32m      case "name":[m
[32m+[m[32m        if (!value.trim()) {[m
[32m+[m[32m          error = "Full name is required";[m
[32m+[m[32m        } else if (value.trim().length < 2) {[m
[32m+[m[32m          error = "Full name must be at least 2 characters";[m
[32m+[m[32m        }[m
[32m+[m[32m        break;[m
[32m+[m[32m      case "username":[m
[32m+[m[32m        if (!value.trim()) {[m
[32m+[m[32m          error = "Username is required";[m
[32m+[m[32m        } else if (value.trim().length < 3) {[m
[32m+[m[32m          error = "Username must be at least 3 characters";[m
[32m+[m[32m        } else if (!/^[a-zA-Z0-9_]+$/.test(value)) {[m
[32m+[m[32m          error = "Username can only contain letters, numbers, and underscores";[m
[32m+[m[32m        }[m
[32m+[m[32m        break;[m
[32m+[m[32m      case "email":[m
[32m+[m[32m        if (!value.trim()) {[m
[32m+[m[32m          error = "Email is required";[m
[32m+[m[32m        } else if (!/^[^\s@]+@[^\s@]+\.[^\s@]+$/.test(value)) {[m
[32m+[m[32m          error = "Please enter a valid email address";[m
[32m+[m[32m        }[m
[32m+[m[32m        break;[m
[32m+[m[32m      case "password":[m
[32m+[m[32m        if (!value) {[m
[32m+[m[32m          error = "Password is required";[m
[32m+[m[32m        } else if (value.length < 8) {[m
[32m+[m[32m          error = "Password must be at least 8 characters";[m
[32m+[m[32m        } else if (!/[A-Z]/.test(value)) {[m
[32m+[m[32m          error = "Password must contain at least one uppercase letter";[m
[32m+[m[32m        } else if (!/[a-z]/.test(value)) {[m
[32m+[m[32m          error = "Password must contain at least one lowercase letter";[m
[32m+[m[32m        } else if (!/\d/.test(value)) {[m
[32m+[m[32m          error = "Password must contain at least one number";[m
[32m+[m[32m        } else if (!/[!@#$%^&*()_+\-=\[\]{};':"\\|,.<>\/?]/.test(value)) {[m
[32m+[m[32m          error = "Password must contain at least one special character (!@#$%^&*()_+-=[]{};':\"\\|,.<>/?";[m
[32m+[m[32m        }[m
[32m+[m[32m        break;[m
[32m+[m[32m      default:[m
[32m+[m[32m        break;[m
[32m+[m[32m    }[m
[32m+[m[41m    [m
[32m+[m[32m    return error;[m
[32m+[m[32m  };[m
[32m+[m
   const handleChange = (e) => {[m
[32m+[m[32m    const { name, value } = e.target;[m
[32m+[m[41m    [m
     setFormData({[m
       ...formData,[m
[31m-      [e.target.name]: e.target.value,[m
[32m+[m[32m      [name]: value,[m
     });[m
[32m+[m[41m    [m
[32m+[m[32m    // Clear field error when user starts typing[m
[32m+[m[32m    if (fieldErrors[name]) {[m
[32m+[m[32m      setFieldErrors(prev => ({[m
[32m+[m[32m        ...prev,[m
[32m+[m[32m        [name]: ""[m
[32m+[m[32m      }));[m
[32m+[m[32m    }[m
[32m+[m[41m    [m
[32m+[m[32m    // Show password requirements when user starts typing in password field[m
[32m+[m[32m    if (name === 'password') {[m
[32m+[m[32m      setShowPasswordRequirements(true);[m
[32m+[m[32m    }[m
[32m+[m[32m  };[m
[32m+[m
[32m+[m[32m  const handleBlur = (e) => {[m
[32m+[m[32m    const { name, value } = e.target;[m
[32m+[m[32m    const error = validateField(name, value);[m
[32m+[m[41m    [m
[32m+[m[32m    if (error) {[m
[32m+[m[32m      setFieldErrors(prev => ({[m
[32m+[m[32m        ...prev,[m
[32m+[m[32m        [name]: error[m
[32m+[m[32m      }));[m
[32m+[m[32m    }[m
   };[m
 [m
   const handleSubmit = async (e) => {[m
     e.preventDefault();[m
[32m+[m[41m    [m
[32m+[m[32m    // Validate all fields before submission[m
[32m+[m[32m    let hasErrors = false;[m
[32m+[m[32m    const newFieldErrors = {};[m
[32m+[m[41m    [m
[32m+[m[32m    Object.keys(formData).forEach(key => {[m
[32m+[m[32m      const error = validateField(key, formData[key]);[m
[32m+[m[32m      if (error) {[m
[32m+[m[32m        newFieldErrors[key] = error;[m
[32m+[m[32m        hasErrors = true;[m
[32m+[m[32m      }[m
[32m+[m[32m    });[m
[32m+[m[41m    [m
[32m+[m[32m    if (hasErrors) {[m
[32m+[m[32m      setFieldErrors(newFieldErrors);[m
[32m+[m[32m      setErrorMsg("Please fix the errors below and try again.");[m
[32m+[m[32m      return;[m
[32m+[m[32m    }[m
[32m+[m[41m    [m
     setErrorMsg("");[m
     setSuccessMsg("");[m
[32m+[m[32m    setFieldErrors({});[m
     setLoading(true);[m
 [m
     try {[m
[32m+[m[32m      // Log the request for debugging[m
[32m+[m[32m      console.log("Sending registration request with data:", formData);[m
[32m+[m[41m      [m
       // Use the API service which now uses the proxy[m
       const response = await api.post('/auth/register', formData);[m
 [m
[36m@@ -65,6 +189,24 @@[m [mconst Register = () => {[m
         switch (error.response.status) {[m
           case 400:[m
             errorMessage = "Invalid registration data. Please check all fields and try again.";[m
[32m+[m[32m            // Extract specific field errors if available[m
[32m+[m[32m            if (error.response.data?.errors) {[m
[32m+[m[32m              const backendErrors = {};[m
[32m+[m[32m              error.response.data.errors.forEach(err => {[m
[32m+[m[32m                // Map backend field names to frontend field names if needed[m
[32m+[m[32m                const fieldName = err.field || err.param || 'general';[m
[32m+[m[32m                // Special handling for common field name mappings[m
[32m+[m[32m                const mappedFieldName = fieldName === 'username' ? 'username' :[m
[32m+[m[32m                                      fieldName === 'email' ? 'email' :[m
[32m+[m[32m                                      fieldName === 'password' ? 'password' :[m
[32m+[m[32m                                      fieldName === 'name' ? 'name' : 'general';[m
[32m+[m[32m                backendErrors[mappedFieldName] = err.message || errorMessage;[m
[32m+[m[32m              });[m
[32m+[m[32m              setFieldErrors(backendErrors);[m
[32m+[m[32m            } else if (error.response.data?.message) {[m
[32m+[m[32m              // If there's a general message but no specific field errors[m
[32m+[m[32m              errorMessage = error.response.data.message;[m
[32m+[m[32m            }[m
             break;[m
           case 409:[m
             errorMessage = "Email or username already exists. Please try different credentials.";[m
[36m@@ -96,7 +238,7 @@[m [mconst Register = () => {[m
         [m
         // Handle error response data if available[m
         if (error.response.data) {[m
[31m-          if (error.response.data.message) {[m
[32m+[m[32m          if (error.response.data.message && !error.response.data.errors) {[m
             errorMessage = error.response.data.message;[m
           }[m
           // Handle validation errors from backend[m
[36m@@ -106,6 +248,7 @@[m [mconst Register = () => {[m
         }[m
       } else if (error.request) {[m
         // Network error[m
[32m+[m[32m        console.error('No response received:', error.request);[m
         if (error.code === 'ECONNABORTED' || error.message.includes('timeout')) {[m
           errorMessage = 'Request timed out. Retrying...';[m
           // For timeout errors, we let the API service handle retries[m
[36m@@ -114,6 +257,7 @@[m [mconst Register = () => {[m
         }[m
       } else {[m
         // Other errors[m
[32m+[m[32m        console.error('Error setting up request:', error.message);[m
         errorMessage = 'An unexpected error occurred. Please try again.';[m
       }[m
       [m
[36m@@ -257,12 +401,18 @@[m [mconst Register = () => {[m
                 name="name"[m
                 type="text"[m
                 required[m
[31m-                className="w-full px-3 sm:px-4 py-2 sm:py-2.5 border border-gray-500 rounded-lg focus:ring-2 focus:ring-gray-800 bg-transparent text-white text-sm sm:text-base"[m
[32m+[m[32m                className={`w-full px-3 sm:px-4 py-2 sm:py-2.5 border rounded-lg focus:ring-2 focus:ring-gray-800 bg-transparent text-white text-sm sm:text-base ${[m
[32m+[m[32m                  fieldErrors.name ? 'border-red-500' : 'border-gray-500'[m
[32m+[m[32m                }`}[m
                 placeholder="John Doe"[m
                 value={formData.name}[m
                 onChange={handleChange}[m
[32m+[m[32m                onBlur={handleBlur}[m
                 disabled={loading || rateLimited}[m
               />[m
[32m+[m[32m              {fieldErrors.name && ([m
[32m+[m[32m                <p className="mt-1 text-red-400 text-xs">{fieldErrors.name}</p>[m
[32m+[m[32m              )}[m
             </div>[m
 [m
             {/* âœ… New Username Field */}[m
[36m@@ -278,12 +428,18 @@[m [mconst Register = () => {[m
                 name="username"[m
                 type="text"[m
                 required[m
[31m-                className="w-full px-3 sm:px-4 py-2 sm:py-2.5 border border-gray-500 rounded-lg focus:ring-2 focus:ring-gray-800 bg-transparent text-white text-sm sm:text-base"[m
[32m+[m[32m                className={`w-full px-3 sm:px-4 py-2 sm:py-2.5 border rounded-lg focus:ring-2 focus:ring-gray-800 bg-transparent text-white text-sm sm:text-base ${[m
[32m+[m[32m                  fieldErrors.username ? 'border-red-500' : 'border-gray-500'[m
[32m+[m[32m                }`}[m
                 placeholder="johndoe123"[m
                 value={formData.username}[m
                 onChange={handleChange}[m
[32m+[m[32m                onBlur={handleBlur}[m
                 disabled={loading || rateLimited}[m
               />[m
[32m+[m[32m              {fieldErrors.username && ([m
[32m+[m[32m                <p className="mt-1 text-red-400 text-xs">{fieldErrors.username}</p>[m
[32m+[m[32m              )}[m
             </div>[m
 [m
             <div>[m
[36m@@ -298,12 +454,18 @@[m [mconst Register = () => {[m
                 name="email"[m
                 type="email"[m
                 required[m
[31m-                className="w-full px-3 sm:px-4 py-2 sm:py-2.5 border border-gray-500 rounded-lg focus:ring-2 focus:ring-gray-800 bg-transparent text-white text-sm sm:text-base"[m
[32m+[m[32m                className={`w-full px-3 sm:px-4 py-2 sm:py-2.5 border rounded-lg focus:ring-2 focus:ring-gray-800 bg-transparent text-white text-sm sm:text-base ${[m
[32m+[m[32m                  fieldErrors.email ? 'border-red-500' : 'border-gray-500'[m
[32m+[m[32m                }`}[m
                 placeholder="you@example.com"[m
                 value={formData.email}[m
                 onChange={handleChange}[m
[32m+[m[32m                onBlur={handleBlur}[m
                 disabled={loading || rateLimited}[m
               />[m
[32m+[m[32m              {fieldErrors.email && ([m
[32m+[m[32m                <p className="mt-1 text-red-400 text-xs">{fieldErrors.email}</p>[m
[32m+[m[32m              )}[m
             </div>[m
 [m
             <div>[m
[36m@@ -319,10 +481,14 @@[m [mconst Register = () => {[m
                   name="password"[m
                   type={showPassword ? "text" : "password"}[m
                   required[m
[31m-                  className="w-full pr-10 px-3 sm:px-4 py-2 sm:py-2.5 border border-gray-500 rounded-lg focus:ring-2 focus:ring-gray-800 bg-transparent text-white text-sm sm:text-base"[m
[32m+[m[32m                  className={`w-full pr-10 px-3 sm:px-4 py-2 sm:py-2.5 border rounded-lg focus:ring-2 focus:ring-gray-800 bg-transparent text-white text-sm sm:text-base ${[m
[32m+[m[32m                    fieldErrors.password ? 'border-red-500' : 'border-gray-500'[m
[32m+[m[32m                  }`}[m
                   placeholder="â€¢â€¢â€¢â€¢â€¢â€¢â€¢â€¢"[m
                   value={formData.password}[m
                   onChange={handleChange}[m
[32m+[m[32m                  onBlur={handleBlur}[m
[32m+[m[32m                  onFocus={() => setShowPasswordRequirements(true)}[m
                   disabled={loading || rateLimited}[m
                 />[m
                 <button[m
[36m@@ -380,6 +546,78 @@[m [mconst Register = () => {[m
                   )}[m
                 </button>[m
               </div>[m
[32m+[m[32m              {fieldErrors.password && ([m
[32m+[m[32m                <p className="mt-1 text-red-400 text-xs">{fieldErrors.password}</p>[m
[32m+[m[32m              )}[m
[32m+[m[41m              [m
[32m+[m[32m              {/* Password Requirements */}[m
[32m+[m[32m              {showPasswordRequirements && ([m
[32m+[m[32m                <div className="mt-2 bg-blue-500/10 border border-blue-500/30 rounded-lg p-3">[m
[32m+[m[32m                  <p className="text-blue-300 font-medium text-xs mb-1">Password Requirements</p>[m
[32m+[m[32m                  <ul className="text-blue-200 text-xs space-y-1">[m
[32m+[m[32m                    <li className={`flex items-center ${passwordValidation.length ? 'text-green-400' : ''}`}>[m
[32m+[m[32m                      {passwordValidation.length ? ([m
[32m+[m[32m                        <svg className="w-3 h-3 mr-1" fill="none" stroke="currentColor" viewBox="0 0 24 24">[m
[32m+[m[32m                          <path strokeLinecap="round" strokeLinejoin="round" strokeWidth={2} d="M5 13l4 4L19 7" />[m
[32m+[m[32m                        </svg>[m
[32m+[m[32m                      ) : ([m
[32m+[m[32m                        <svg className="w-3 h-3 mr-1" fill="none" stroke="currentColor" viewBox="0 0 24 24">[m
[32m+[m[32m                          <path strokeLinecap="round" strokeLinejoin="round" strokeWidth={2} d="M6 18L18 6M6 6l12 12" />[m
[32m+[m[32m                        </svg>[m
[32m+[m[32m                      )}[m
[32m+[m[32m                      At least 8 characters[m
[32m+[m[32m                    </li>[m
[32m+[m[32m                    <li className={`flex items-center ${passwordValidation.hasUpperCase ? 'text-green-400' : ''}`}>[m
[32m+[m[32m                      {passwordValidation.hasUpperCase ? ([m
[32m+[m[32m                        <svg className="w-3 h-3 mr-1" fill="none" stroke="currentColor" viewBox="0 0 24 24">[m
[32m+[m[32m                          <path strokeLinecap="round" strokeLinejoin="round" strokeWidth={2} d="M5 13l4 4L19 7" />[m
[32m+[m[32m                        </svg>[m
[32m+[m[32m                      ) : ([m
[32m+[m[32m                        <svg className="w-3 h-3 mr-1" fill="none" stroke="currentColor" viewBox="0 0 24 24">[m
[32m+[m[32m                          <path strokeLinecap="round" strokeLinejoin="round" strokeWidth={2} d="M6 18L18 6M6 6l12 12" />[m
[32m+[m[32m                        </svg>[m
[32m+[m[32m                      )}[m
[32m+[m[32m                      Contains uppercase letter (A-Z)[m
[32m+[m[32m                    </li>[m
[32m+[m[32m                    <li className={`flex items-center ${passwordValidation.hasLowerCase ? 'text-green-400' : ''}`}>[m
[32m+[m[32m                      {passwordValidation.hasLowerCase ? ([m
[32m+[m[32m                        <svg className="w-3 h-3 mr-1" fill="none" stroke="currentColor" viewBox="0 0 24 24">[m
[32m+[m[32m                          <path strokeLinecap="round" strokeLinejoin="round" strokeWidth={2} d="M5 13l4 4L19 7" />[m
[32m+[m[32m                        </svg>[m
[32m+[m[32m                      ) : ([m
[32m+[m[32m                        <svg className="w-3 h-3 mr-1" fill="none" stroke="currentColor" viewBox="0 0 24 24">[m
[32m+[m[32m                          <path strokeLinecap="round" strokeLinejoin="round" strokeWidth={2} d="M6 18L18 6M6 6l12 12" />[m
[32m+[m[32m                        </svg>[m
[32m+[m[32m                      )}[m
[32m+[m[32m                      Contains lowercase letter (a-z)[m
[32m+[m[32m                    </li>[m
[32m+[m[32m                    <li className={`flex items-center ${passwordValidation.hasNumber ? 'text-green-400' : ''}`}>[m
[32m+[m[32m                      {passwordValidation.hasNumber ? ([m
[32m+[m[32m                        <svg className="w-3 h-3 mr-1" fill="none" stroke="currentColor" viewBox="0 0 24 24">[m
[32m+[m[32m                          <path strokeLinecap="round" strokeLinejoin="round" strokeWidth={2} d="M5 13l4 4L19 7" />[m
[32m+[m[32m                        </svg>[m
[32m+[m[32m                      ) : ([m
[32m+[m[32m                        <svg className="w-3 h-3 mr-1" fill="none" stroke="currentColor" viewBox="0 0 24 24">[m
[32m+[m[32m                          <path strokeLinecap="round" strokeLinejoin="round" strokeWidth={2} d="M6 18L18 6M6 6l12 12" />[m
[32m+[m[32m                        </svg>[m
[32m+[m[32m                      )}[m
[32m+[m[32m                      Contains number (0-9)[m
[32m+[m[32m                    </li>[m
[32m+[m[32m                    <li className={`flex items-center ${passwordValidation.hasSpecialChar ? 'text-green-400' : ''}`}>[m
[32m+[m[32m                      {passwordValidation.hasSpecialChar ? ([m
[32m+[m[32m                        <svg className="w-3 h-3 mr-1" fill="none" stroke="currentColor" viewBox="0 0 24 24">[m
[32m+[m[32m                          <path strokeLinecap="round" strokeLinejoin="round" strokeWidth={2} d="M5 13l4 4L19 7" />[m
[32m+[m[32m                        </svg>[m
[32m+[m[32m                      ) : ([m
[32m+[m[32m                        <svg className="w-3 h-3 mr-1" fill="none" stroke="currentColor" viewBox="0 0 24 24">[m
[32m+[m[32m                          <path strokeLinecap="round" strokeLinejoin="round" stroke